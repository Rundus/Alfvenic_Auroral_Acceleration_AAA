


class envFunc:


    # --- LAMBDIFY ALL THE FUNCTIONS ---
    import sympy as sp
    from sympy import lambdify

    mu, chi = sp.symbols('mu chi')

    # Skin Depth
    func_lbda = lambdify([mu, chi], 5314273.25081568 * sp.sqrt(1 / (100000000 * (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) + 2542800000000 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) + 500000 * sp.sqrt(6357) * sp.sqrt(1 / (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) + 100000.0)))







    func_pDD_mu_lbda = lambdify([mu, chi], 4.10950468734714e-19 * (100000000 * (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) + 2542800000000 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) + 500000 * sp.sqrt(6357) * sp.sqrt(1 / (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) + 100000.0) * (15892500000 * (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi) * (0.934655265184067 * (-0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                                                                                 -0.0545987790460187 * chi ** 4 * (
                                                                                     0.333333333333333 * sp.sqrt(3) * (
                                                                                         108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (
                                                                                             mu ** 4 * (
                                                                                                 sp.sqrt(3) * sp.sqrt(
                                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 4 * (
                                                                                             sp.sqrt(3) * sp.sqrt(
                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 + (
                                                                                             -0.333333333333333 * sp.sqrt(
                                                                                         3) * (
                                                                                                         108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                                             2 * (sp.sqrt(3) * sp.sqrt(
                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                                 mu ** 4 * (
                                                                                     0.109197558092037 * chi ** 4 * (
                                                                                         sp.sqrt(3) * sp.sqrt(
                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                 sp.sqrt(3) * sp.sqrt(
                                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                                                                             3 / 2)) + 0.218395116184075 * chi ** 4 * (
                                                                                 sp.sqrt(3) * sp.sqrt(
                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - 0.612372435695794 * chi ** 4 / (
                                                                                 mu ** 5 * sp.sqrt(
                                                                             0.109197558092037 * chi ** 4 * (
                                                                                         sp.sqrt(3) * sp.sqrt(
                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                         sp.sqrt(3) * sp.sqrt(
                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                 -0.333333333333333 * sp.sqrt(3) * (
                                                                                     108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                                 2 * (sp.sqrt(3) * sp.sqrt(
                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 4 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) * sp.exp(
        6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / (280 * chi)) / (7 * chi) + 646583184000000 * (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi) * (0.934655265184067 * (-0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                                                                                 -0.0545987790460187 * chi ** 4 * (
                                                                                     0.333333333333333 * sp.sqrt(3) * (
                                                                                         108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (
                                                                                             mu ** 4 * (
                                                                                                 sp.sqrt(3) * sp.sqrt(
                                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 4 * (
                                                                                             sp.sqrt(3) * sp.sqrt(
                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 + (
                                                                                             -0.333333333333333 * sp.sqrt(
                                                                                         3) * (
                                                                                                         108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                                             2 * (sp.sqrt(3) * sp.sqrt(
                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                                 mu ** 4 * (
                                                                                     0.109197558092037 * chi ** 4 * (
                                                                                         sp.sqrt(3) * sp.sqrt(
                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                 sp.sqrt(3) * sp.sqrt(
                                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                                                                             3 / 2)) + 0.218395116184075 * chi ** 4 * (
                                                                                 sp.sqrt(3) * sp.sqrt(
                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - 0.612372435695794 * chi ** 4 / (
                                                                                 mu ** 5 * sp.sqrt(
                                                                             0.109197558092037 * chi ** 4 * (
                                                                                         sp.sqrt(3) * sp.sqrt(
                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                         sp.sqrt(3) * sp.sqrt(
                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                 -0.333333333333333 * sp.sqrt(3) * (
                                                                                     108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                                 2 * (sp.sqrt(3) * sp.sqrt(
                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 4 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) * sp.exp(
        6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / (175 * chi)) / (7 * chi) - 635700000000 * (0.934655265184067 * (
                -0.0545987790460187 * chi ** 4 * (
                    0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                            -0.0545987790460187 * chi ** 4 * (0.333333333333333 * sp.sqrt(3) * (
                                108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (
                                        mu ** 4 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 4 * (
                                        sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 + (
                                        -0.333333333333333 * sp.sqrt(3) * (
                                            108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                        2 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                            mu ** 4 * (0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                   sp.sqrt(3) * sp.sqrt(
                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                        3 / 2)) + 0.218395116184075 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - 0.612372435695794 * chi ** 4 / (
                            mu ** 5 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                          sp.sqrt(3) * sp.sqrt(
                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                            -0.333333333333333 * sp.sqrt(3) * (
                                108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (2 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 4 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) * sp.exp(
        6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / (280 * chi)) / chi - 16164579600000000 * (0.934655265184067 * (
                -0.0545987790460187 * chi ** 4 * (
                    0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                            -0.0545987790460187 * chi ** 4 * (0.333333333333333 * sp.sqrt(3) * (
                                108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (
                                        mu ** 4 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 4 * (
                                        sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 + (
                                        -0.333333333333333 * sp.sqrt(3) * (
                                            108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                        2 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                            mu ** 4 * (0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                   sp.sqrt(3) * sp.sqrt(
                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                        3 / 2)) + 0.218395116184075 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - 0.612372435695794 * chi ** 4 / (
                            mu ** 5 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                          sp.sqrt(3) * sp.sqrt(
                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                            -0.333333333333333 * sp.sqrt(3) * (
                                108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (2 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 4 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) * sp.exp(
        6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / (175 * chi)) / chi + 1589250000 * sp.sqrt(6357) * (0.934655265184067 * (
                -0.0545987790460187 * chi ** 4 * (
                    0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                            -0.0545987790460187 * chi ** 4 * (0.333333333333333 * sp.sqrt(3) * (
                                108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (
                                        mu ** 4 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 4 * (
                                        sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 + (
                                        -0.333333333333333 * sp.sqrt(3) * (
                                            108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                        2 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                            mu ** 4 * (0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                   sp.sqrt(3) * sp.sqrt(
                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                        3 / 2)) + 0.218395116184075 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - 0.612372435695794 * chi ** 4 / (
                            mu ** 5 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                          sp.sqrt(3) * sp.sqrt(
                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                            -0.333333333333333 * sp.sqrt(3) * (
                                108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (2 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 4 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) * sp.sqrt(
        1 / (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) / (chi * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi))) * sp.sqrt(1 / (100000000 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) + 2542800000000 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) + 500000 * sp.sqrt(6357) * sp.sqrt(1 / (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) + 100000.0)) / ((-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) / 25428 + (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) + sp.sqrt(6357) * sp.sqrt(1 / (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) / 5085600 + 3.93267264432909e-8) ** 2)







    func_pDD_chi_lbda = lambdify([mu, chi], 4.10950468734714e-19 * (100000000 * (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) + 2542800000000 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) + 500000 * sp.sqrt(6357) * sp.sqrt(1 / (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) + 100000.0) * (-2542800000000 * (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi) * (-6357 * (0.934655265184067 * (-0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (-108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                                                                                          -0.0545987790460187 * chi ** 4 * (
                                                                                              0.333333333333333 * sp.sqrt(
                                                                                          3) * (
                                                                                                          -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                          27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                      mu ** 4 * (
                                                                                                          sp.sqrt(
                                                                                                              3) * sp.sqrt(
                                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 3 * (
                                                                                                      sp.sqrt(
                                                                                                          3) * sp.sqrt(
                                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + (
                                                                                                      -0.333333333333333 * sp.sqrt(
                                                                                                  3) * (
                                                                                                                  -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                      2 * (sp.sqrt(
                                                                                                  3) * sp.sqrt(
                                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                                          mu ** 4 * (
                                                                                              0.109197558092037 * chi ** 4 * (
                                                                                                  sp.sqrt(3) * sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                          sp.sqrt(
                                                                                                              3) * sp.sqrt(
                                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                                                                                      3 / 2)) - 0.218395116184075 * chi ** 3 * (
                                                                                          sp.sqrt(3) * sp.sqrt(
                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.612372435695794 * chi ** 3 / (
                                                                                          mu ** 4 * sp.sqrt(
                                                                                      0.109197558092037 * chi ** 4 * (
                                                                                                  sp.sqrt(3) * sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                  sp.sqrt(3) * sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                          -0.333333333333333 * sp.sqrt(
                                                                                      3) * (
                                                                                                      -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                                          2 * (sp.sqrt(3) * sp.sqrt(
                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (-108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 3 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) / (
                                                            175 * chi) + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi ** 2)) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) - 100000000 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * (-6357 * (0.934655265184067 * (-0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (-108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                                                                                      -0.0545987790460187 * chi ** 4 * (
                                                                                          0.333333333333333 * sp.sqrt(
                                                                                      3) * (
                                                                                                      -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                  mu ** 4 * (sp.sqrt(
                                                                                              3) * sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 3 * (
                                                                                                  sp.sqrt(3) * sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + (
                                                                                                  -0.333333333333333 * sp.sqrt(
                                                                                              3) * (
                                                                                                              -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                  2 * (sp.sqrt(
                                                                                              3) * sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                                      mu ** 4 * (
                                                                                          0.109197558092037 * chi ** 4 * (
                                                                                              sp.sqrt(3) * sp.sqrt(
                                                                                          27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                      sp.sqrt(
                                                                                                          3) * sp.sqrt(
                                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                                                                                  3 / 2)) - 0.218395116184075 * chi ** 3 * (
                                                                                      sp.sqrt(3) * sp.sqrt(
                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.612372435695794 * chi ** 3 / (
                                                                                      mu ** 4 * sp.sqrt(
                                                                                  0.109197558092037 * chi ** 4 * (
                                                                                              sp.sqrt(3) * sp.sqrt(
                                                                                          27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                              sp.sqrt(3) * sp.sqrt(
                                                                                          27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                      -0.333333333333333 * sp.sqrt(
                                                                                  3) * (
                                                                                                  -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                                      2 * (sp.sqrt(3) * sp.sqrt(
                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (-108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 3 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) / (
                                                        280 * chi) + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi ** 2)) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) - 100000000 * (6357 * (0.934655265184067 * (
                -0.0545987790460187 * chi ** 4 * (0.333333333333333 * sp.sqrt(3) * (
                    -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                            -0.0545987790460187 * chi ** 4 * (0.333333333333333 * sp.sqrt(3) * (
                                -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (
                                        mu ** 4 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 3 * (
                                        sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + (
                                        -0.333333333333333 * sp.sqrt(3) * (
                                            -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                        2 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                            mu ** 4 * (0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                   sp.sqrt(3) * sp.sqrt(
                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                        3 / 2)) - 0.218395116184075 * chi ** 3 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.612372435695794 * chi ** 3 / (
                            mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                          sp.sqrt(3) * sp.sqrt(
                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                            -0.333333333333333 * sp.sqrt(3) * (
                                -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (2 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (-108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 3 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) / chi - 6357 * (
                                                                            -0.934655265184067 * sp.sqrt(
                                                                        0.109197558092037 * chi ** 4 * (
                                                                                    sp.sqrt(3) * sp.sqrt(
                                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                    sp.sqrt(3) * sp.sqrt(
                                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
                                                                        -0.109197558092037 * chi ** 4 * (
                                                                                    sp.sqrt(3) * sp.sqrt(
                                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                                                                                    mu ** 4 * sp.sqrt(
                                                                                0.109197558092037 * chi ** 4 * (
                                                                                            sp.sqrt(3) * sp.sqrt(
                                                                                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                            sp.sqrt(3) * sp.sqrt(
                                                                                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                    sp.sqrt(3) * sp.sqrt(
                                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                                                                            -0.333333333333333))) / chi ** 2) * sp.exp(
        6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / (280 * chi)) - 2542800000000 * (6357 * (0.934655265184067 * (
                -0.0545987790460187 * chi ** 4 * (0.333333333333333 * sp.sqrt(3) * (
                    -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                            -0.0545987790460187 * chi ** 4 * (0.333333333333333 * sp.sqrt(3) * (
                                -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (
                                        mu ** 4 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 3 * (
                                        sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + (
                                        -0.333333333333333 * sp.sqrt(3) * (
                                            -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                        2 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                            mu ** 4 * (0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                   sp.sqrt(3) * sp.sqrt(
                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                        3 / 2)) - 0.218395116184075 * chi ** 3 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.612372435695794 * chi ** 3 / (
                            mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                          sp.sqrt(3) * sp.sqrt(
                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                            -0.333333333333333 * sp.sqrt(3) * (
                                -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (2 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (-108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 3 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) / chi - 6357 * (
                                                                                    -0.934655265184067 * sp.sqrt(
                                                                                0.109197558092037 * chi ** 4 * (
                                                                                            sp.sqrt(3) * sp.sqrt(
                                                                                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                            sp.sqrt(3) * sp.sqrt(
                                                                                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
                                                                                -0.109197558092037 * chi ** 4 * (
                                                                                            sp.sqrt(3) * sp.sqrt(
                                                                                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                                                                                            mu ** 4 * sp.sqrt(
                                                                                        0.109197558092037 * chi ** 4 * (
                                                                                                    sp.sqrt(
                                                                                                        3) * sp.sqrt(
                                                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                    sp.sqrt(
                                                                                                        3) * sp.sqrt(
                                                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                            sp.sqrt(3) * sp.sqrt(
                                                                                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                                                                                    -0.333333333333333))) / chi ** 2) * sp.exp(
        6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / (175 * chi)) - 250000 * sp.sqrt(6357) * (-6357 * (0.934655265184067 * (
                -0.0545987790460187 * chi ** 4 * (0.333333333333333 * sp.sqrt(3) * (
                    -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                            -0.0545987790460187 * chi ** 4 * (0.333333333333333 * sp.sqrt(3) * (
                                -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (
                                        mu ** 4 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 3 * (
                                        sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + (
                                        -0.333333333333333 * sp.sqrt(3) * (
                                            -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                        2 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                            mu ** 4 * (0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                   sp.sqrt(3) * sp.sqrt(
                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                        3 / 2)) - 0.218395116184075 * chi ** 3 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.612372435695794 * chi ** 3 / (
                            mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                          sp.sqrt(3) * sp.sqrt(
                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                            -0.333333333333333 * sp.sqrt(3) * (
                                -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (2 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (-108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 3 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) / chi + 6357 * (
                                                                                             -0.934655265184067 * sp.sqrt(
                                                                                         0.109197558092037 * chi ** 4 * (
                                                                                                     sp.sqrt(
                                                                                                         3) * sp.sqrt(
                                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                     sp.sqrt(
                                                                                                         3) * sp.sqrt(
                                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
                                                                                         -0.109197558092037 * chi ** 4 * (
                                                                                                     sp.sqrt(
                                                                                                         3) * sp.sqrt(
                                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                                                                                                     mu ** 4 * sp.sqrt(
                                                                                                 0.109197558092037 * chi ** 4 * (
                                                                                                             sp.sqrt(
                                                                                                                 3) * sp.sqrt(
                                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                             sp.sqrt(
                                                                                                                 3) * sp.sqrt(
                                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                                     sp.sqrt(
                                                                                                         3) * sp.sqrt(
                                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                                                                                             -0.333333333333333))) / chi ** 2) * sp.sqrt(
        1 / (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) / (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi)) * sp.sqrt(1 / (100000000 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) + 2542800000000 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) + 500000 * sp.sqrt(6357) * sp.sqrt(1 / (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) + 100000.0)) / ((-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) / 25428 + (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) + sp.sqrt(6357) * sp.sqrt(1 / (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) / 5085600 + 3.93267264432909e-8) ** 2)

    # Alfven Velocity







    func_V_A = lambdify([mu, chi], 131149.98067647 * chi ** 3 * sp.sqrt(3 * sp.cos(0.0174532925199433 * sp.asin(
        0.966775705727066 * sp.sqrt(-sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))))) + 1) / ((-sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) ** 3 * sp.sqrt(2.47773862459136e-6 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) + (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) + 1.23886931229568e-8 * sp.sqrt(6357) * sp.sqrt(1 / (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) + 2.47773862459136e-9)))










    func_pDD_mu_V_A = lambdify([mu, chi], 131149.98067647 * chi ** 3 * (-3 * (-0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                                                                                          -0.0545987790460187 * chi ** 4 * (
                                                                                              0.333333333333333 * sp.sqrt(
                                                                                          3) * (
                                                                                                          108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                          27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (
                                                                                                      mu ** 4 * (
                                                                                                          sp.sqrt(
                                                                                                              3) * sp.sqrt(
                                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 4 * (
                                                                                                      sp.sqrt(
                                                                                                          3) * sp.sqrt(
                                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 + (
                                                                                                      -0.333333333333333 * sp.sqrt(
                                                                                                  3) * (
                                                                                                                  108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                                                      2 * (sp.sqrt(
                                                                                                  3) * sp.sqrt(
                                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                                          mu ** 4 * (
                                                                                              0.109197558092037 * chi ** 4 * (
                                                                                                  sp.sqrt(3) * sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                          sp.sqrt(
                                                                                                              3) * sp.sqrt(
                                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                                                                                      3 / 2)) + 0.218395116184075 * chi ** 4 * (
                                                                                          sp.sqrt(3) * sp.sqrt(
                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - 0.612372435695794 * chi ** 4 / (
                                                                                          mu ** 5 * sp.sqrt(
                                                                                      0.109197558092037 * chi ** 4 * (
                                                                                                  sp.sqrt(3) * sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                  sp.sqrt(3) * sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                          -0.333333333333333 * sp.sqrt(
                                                                                      3) * (
                                                                                                      108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                                          2 * (sp.sqrt(3) * sp.sqrt(
                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) + 3 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 4 * (
                                                    sp.sqrt(3) * sp.sqrt(
                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - (
                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                        108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) * sp.sqrt(
        3 * sp.cos(0.0174532925199433 * sp.asin(0.966775705727066 * sp.sqrt(-sp.sqrt(0.109197558092037 * chi ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                 sp.sqrt(3) * sp.sqrt(
                                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))))) + 1) / ((-sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) ** 4 * sp.sqrt(2.47773862459136e-6 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) + (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) + 1.23886931229568e-8 * sp.sqrt(6357) * sp.sqrt(1 / (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) + 2.47773862459136e-9)) - 3319.42290170696 * chi ** 3 * ((
                                                                                                                   -0.0545987790460187 * chi ** 4 * (
                                                                                                                       0.333333333333333 * sp.sqrt(
                                                                                                                   3) * (
                                                                                                                                   108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                                                   27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (
                                                                                                                               mu ** 4 * (
                                                                                                                                   sp.sqrt(
                                                                                                                                       3) * sp.sqrt(
                                                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                                                                                                                               -0.0545987790460187 * chi ** 4 * (
                                                                                                                                   0.333333333333333 * sp.sqrt(
                                                                                                                               3) * (
                                                                                                                                               108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (
                                                                                                                                           mu ** 4 * (
                                                                                                                                               sp.sqrt(
                                                                                                                                                   3) * sp.sqrt(
                                                                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 4 * (
                                                                                                                                           sp.sqrt(
                                                                                                                                               3) * sp.sqrt(
                                                                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 + (
                                                                                                                                           -0.333333333333333 * sp.sqrt(
                                                                                                                                       3) * (
                                                                                                                                                       108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                                                                                           2 * (
                                                                                                                                               sp.sqrt(
                                                                                                                                                   3) * sp.sqrt(
                                                                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                                                                               mu ** 4 * (
                                                                                                                                   0.109197558092037 * chi ** 4 * (
                                                                                                                                       sp.sqrt(
                                                                                                                                           3) * sp.sqrt(
                                                                                                                                   27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                                                               sp.sqrt(
                                                                                                                                                   3) * sp.sqrt(
                                                                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                                                                                                                           3 / 2)) + 0.218395116184075 * chi ** 4 * (
                                                                                                                               sp.sqrt(
                                                                                                                                   3) * sp.sqrt(
                                                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - 0.612372435695794 * chi ** 4 / (
                                                                                                                               mu ** 5 * sp.sqrt(
                                                                                                                           0.109197558092037 * chi ** 4 * (
                                                                                                                                       sp.sqrt(
                                                                                                                                           3) * sp.sqrt(
                                                                                                                                   27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                                                       sp.sqrt(
                                                                                                                                           3) * sp.sqrt(
                                                                                                                                   27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                                                               -0.333333333333333 * sp.sqrt(
                                                                                                                           3) * (
                                                                                                                                           108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                                                                               2 * (
                                                                                                                                   sp.sqrt(
                                                                                                                                       3) * sp.sqrt(
                                                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                                                                   2 * sp.sqrt(
                                                                                                               -0.109197558092037 * chi ** 4 * (
                                                                                                                           sp.sqrt(
                                                                                                                               3) * sp.sqrt(
                                                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                                                                                                                           mu ** 4 * sp.sqrt(
                                                                                                                       0.109197558092037 * chi ** 4 * (
                                                                                                                                   sp.sqrt(
                                                                                                                                       3) * sp.sqrt(
                                                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                                                   sp.sqrt(
                                                                                                                                       3) * sp.sqrt(
                                                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                                                           sp.sqrt(
                                                                                                                               3) * sp.sqrt(
                                                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                                                                                                                   -0.333333333333333))) - (
                                                                                                                   0.0545987790460187 * chi ** 4 * (
                                                                                                                       0.333333333333333 * sp.sqrt(
                                                                                                                   3) * (
                                                                                                                                   108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                                                   27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (
                                                                                                                               mu ** 4 * (
                                                                                                                                   sp.sqrt(
                                                                                                                                       3) * sp.sqrt(
                                                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 4 * (
                                                                                                                               sp.sqrt(
                                                                                                                                   3) * sp.sqrt(
                                                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - (
                                                                                                                               -0.333333333333333 * sp.sqrt(
                                                                                                                           3) * (
                                                                                                                                           108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                                                                               2 * (
                                                                                                                                   sp.sqrt(
                                                                                                                                       3) * sp.sqrt(
                                                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                                                                   2 * sp.sqrt(
                                                                                                               0.109197558092037 * chi ** 4 * (
                                                                                                                           sp.sqrt(
                                                                                                                               3) * sp.sqrt(
                                                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                                           sp.sqrt(
                                                                                                                               3) * sp.sqrt(
                                                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333))) * sp.sin(
        0.0174532925199433 * sp.asin(0.966775705727066 * sp.sqrt(-sp.sqrt(0.109197558092037 * chi ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                      sp.sqrt(3) * sp.sqrt(
                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))))) / ((-sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                 sp.sqrt(3) * sp.sqrt(
                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) ** (7 / 2) * sp.sqrt(3 * sp.cos(0.0174532925199433 * sp.asin(
        0.966775705727066 * sp.sqrt(-sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))))) + 1) * sp.sqrt(0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                               sp.sqrt(3) * sp.sqrt(
                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) - 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) + 1) * sp.sqrt(2.47773862459136e-6 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) + (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) + 1.23886931229568e-8 * sp.sqrt(6357) * sp.sqrt(1 / (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) + 2.47773862459136e-9)) + 131149.98067647 * chi ** 3 * sp.sqrt(3 * sp.cos(
        0.0174532925199433 * sp.asin(0.966775705727066 * sp.sqrt(-sp.sqrt(0.109197558092037 * chi ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                      sp.sqrt(3) * sp.sqrt(
                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))))) + 1) * (2.81267579223702e-5 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * (0.934655265184067 * (-0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                                                                             -0.0545987790460187 * chi ** 4 * (
                                                                                 0.333333333333333 * sp.sqrt(3) * (
                                                                                     108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (
                                                                                         mu ** 4 * (
                                                                                             sp.sqrt(3) * sp.sqrt(
                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 4 * (
                                                                                         sp.sqrt(3) * sp.sqrt(
                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 + (
                                                                                         -0.333333333333333 * sp.sqrt(
                                                                                     3) * (
                                                                                                     108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                                         2 * (sp.sqrt(3) * sp.sqrt(
                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                             mu ** 4 * (0.109197558092037 * chi ** 4 * (
                                                                                 sp.sqrt(3) * sp.sqrt(
                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                    sp.sqrt(
                                                                                                        3) * sp.sqrt(
                                                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                                                                         3 / 2)) + 0.218395116184075 * chi ** 4 * (
                                                                             sp.sqrt(3) * sp.sqrt(
                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - 0.612372435695794 * chi ** 4 / (
                                                                             mu ** 5 * sp.sqrt(
                                                                         0.109197558092037 * chi ** 4 * (
                                                                                     sp.sqrt(3) * sp.sqrt(
                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                     sp.sqrt(3) * sp.sqrt(
                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                             -0.333333333333333 * sp.sqrt(3) * (
                                                                                 108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                             2 * (sp.sqrt(3) * sp.sqrt(
                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 4 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) * sp.exp(
        6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / (280 * chi)) / chi + 6357 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * (0.934655265184067 * (-0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                                                                             -0.0545987790460187 * chi ** 4 * (
                                                                                 0.333333333333333 * sp.sqrt(3) * (
                                                                                     108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (
                                                                                         mu ** 4 * (
                                                                                             sp.sqrt(3) * sp.sqrt(
                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 4 * (
                                                                                         sp.sqrt(3) * sp.sqrt(
                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 + (
                                                                                         -0.333333333333333 * sp.sqrt(
                                                                                     3) * (
                                                                                                     108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                                         2 * (sp.sqrt(3) * sp.sqrt(
                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                             mu ** 4 * (0.109197558092037 * chi ** 4 * (
                                                                                 sp.sqrt(3) * sp.sqrt(
                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                    sp.sqrt(
                                                                                                        3) * sp.sqrt(
                                                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                                                                         3 / 2)) + 0.218395116184075 * chi ** 4 * (
                                                                             sp.sqrt(3) * sp.sqrt(
                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - 0.612372435695794 * chi ** 4 / (
                                                                             mu ** 5 * sp.sqrt(
                                                                         0.109197558092037 * chi ** 4 * (
                                                                                     sp.sqrt(3) * sp.sqrt(
                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                     sp.sqrt(3) * sp.sqrt(
                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                             -0.333333333333333 * sp.sqrt(3) * (
                                                                                 108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                             2 * (sp.sqrt(3) * sp.sqrt(
                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 4 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) * sp.exp(
        6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / (175 * chi)) / (350 * chi) - 0.00787549221826364 * (0.934655265184067 * (
                -0.0545987790460187 * chi ** 4 * (
                    0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                            -0.0545987790460187 * chi ** 4 * (0.333333333333333 * sp.sqrt(3) * (
                                108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (
                                        mu ** 4 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 4 * (
                                        sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 + (
                                        -0.333333333333333 * sp.sqrt(3) * (
                                            108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                        2 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                            mu ** 4 * (0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                   sp.sqrt(3) * sp.sqrt(
                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                        3 / 2)) + 0.218395116184075 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - 0.612372435695794 * chi ** 4 / (
                            mu ** 5 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                          sp.sqrt(3) * sp.sqrt(
                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                            -0.333333333333333 * sp.sqrt(3) * (
                                108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (2 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 4 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) * sp.exp(
        6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / (280 * chi)) / chi - 6357 * (0.934655265184067 * (
                -0.0545987790460187 * chi ** 4 * (
                    0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                            -0.0545987790460187 * chi ** 4 * (0.333333333333333 * sp.sqrt(3) * (
                                108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (
                                        mu ** 4 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 4 * (
                                        sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 + (
                                        -0.333333333333333 * sp.sqrt(3) * (
                                            108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                        2 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                            mu ** 4 * (0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                   sp.sqrt(3) * sp.sqrt(
                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                        3 / 2)) + 0.218395116184075 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - 0.612372435695794 * chi ** 4 / (
                            mu ** 5 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                          sp.sqrt(3) * sp.sqrt(
                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                            -0.333333333333333 * sp.sqrt(3) * (
                                108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (2 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 4 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) * sp.exp(
        6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / (175 * chi)) / (2 * chi) + 1.96887305456591e-5 * sp.sqrt(6357) * (
                                                            0.934655265184067 * (-0.0545987790460187 * chi ** 4 * (
                                                                0.333333333333333 * sp.sqrt(3) * (
                                                                    108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (
                                                                                             mu ** 4 * (
                                                                                                 sp.sqrt(3) * sp.sqrt(
                                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                                                                                             -0.0545987790460187 * chi ** 4 * (
                                                                                                 0.333333333333333 * sp.sqrt(
                                                                                             3) * (
                                                                                                             108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (
                                                                                                         mu ** 4 * (
                                                                                                             sp.sqrt(
                                                                                                                 3) * sp.sqrt(
                                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 4 * (
                                                                                                         sp.sqrt(
                                                                                                             3) * sp.sqrt(
                                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 + (
                                                                                                         -0.333333333333333 * sp.sqrt(
                                                                                                     3) * (
                                                                                                                     108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                                                         2 * (sp.sqrt(
                                                                                                     3) * sp.sqrt(
                                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                                             mu ** 4 * (
                                                                                                 0.109197558092037 * chi ** 4 * (
                                                                                                     sp.sqrt(
                                                                                                         3) * sp.sqrt(
                                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                             sp.sqrt(
                                                                                                                 3) * sp.sqrt(
                                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                                                                                         3 / 2)) + 0.218395116184075 * chi ** 4 * (
                                                                                             sp.sqrt(3) * sp.sqrt(
                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - 0.612372435695794 * chi ** 4 / (
                                                                                             mu ** 5 * sp.sqrt(
                                                                                         0.109197558092037 * chi ** 4 * (
                                                                                                     sp.sqrt(
                                                                                                         3) * sp.sqrt(
                                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                     sp.sqrt(
                                                                                                         3) * sp.sqrt(
                                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                             -0.333333333333333 * sp.sqrt(
                                                                                         3) * (
                                                                                                         108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                                             2 * (sp.sqrt(3) * sp.sqrt(
                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
                                                        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                                                            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                                                                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (
                                                                        sp.sqrt(3) * sp.sqrt(
                                                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                  sp.sqrt(3) * sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                                                            -0.333333333333333)) - 0.934655265184067 * (
                                                                        0.0545987790460187 * chi ** 4 * (
                                                                            0.333333333333333 * sp.sqrt(3) * (
                                                                                108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 3 / chi ** 4) / (
                                                                                    mu ** 4 * (sp.sqrt(3) * sp.sqrt(
                                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 4 * (
                                                                                    sp.sqrt(3) * sp.sqrt(
                                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 5 - (
                                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                                        108 * mu ** 7 / chi ** 8 + 1536 * mu ** 11 / chi ** 12) / sp.sqrt(
                                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 3 / chi ** 4) / (
                                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
                                                        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                                                            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) * sp.sqrt(
        1 / (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) / (chi * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi))) / ((-sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) ** 3 * (2.47773862459136e-6 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) + (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) + 1.23886931229568e-8 * sp.sqrt(6357) * sp.sqrt(1 / (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) + 2.47773862459136e-9) ** (3 / 2)))








    func_pDD_chi_V_A = lambdify([mu, chi], 131149.98067647 * chi ** 3 * (-3 * (-0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (-108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                                                                                           -0.0545987790460187 * chi ** 4 * (
                                                                                               0.333333333333333 * sp.sqrt(
                                                                                           3) * (
                                                                                                           -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                       mu ** 4 * (
                                                                                                           sp.sqrt(
                                                                                                               3) * sp.sqrt(
                                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 3 * (
                                                                                                       sp.sqrt(
                                                                                                           3) * sp.sqrt(
                                                                                                   27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + (
                                                                                                       -0.333333333333333 * sp.sqrt(
                                                                                                   3) * (
                                                                                                                   -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                                   27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                       2 * (sp.sqrt(
                                                                                                   3) * sp.sqrt(
                                                                                                   27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                                           mu ** 4 * (
                                                                                               0.109197558092037 * chi ** 4 * (
                                                                                                   sp.sqrt(3) * sp.sqrt(
                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                           sp.sqrt(
                                                                                                               3) * sp.sqrt(
                                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                                                                                       3 / 2)) - 0.218395116184075 * chi ** 3 * (
                                                                                           sp.sqrt(3) * sp.sqrt(
                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.612372435695794 * chi ** 3 / (
                                                                                           mu ** 4 * sp.sqrt(
                                                                                       0.109197558092037 * chi ** 4 * (
                                                                                                   sp.sqrt(3) * sp.sqrt(
                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                   sp.sqrt(3) * sp.sqrt(
                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                           -0.333333333333333 * sp.sqrt(
                                                                                       3) * (
                                                                                                       -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                                           2 * (sp.sqrt(3) * sp.sqrt(
                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) + 3 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (-108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 3 * (
                                                    sp.sqrt(3) * sp.sqrt(
                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - (
                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                        -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) * sp.sqrt(
        3 * sp.cos(0.0174532925199433 * sp.asin(0.966775705727066 * sp.sqrt(-sp.sqrt(0.109197558092037 * chi ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                 sp.sqrt(3) * sp.sqrt(
                                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))))) + 1) / ((-sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) ** 4 * sp.sqrt(2.47773862459136e-6 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) + (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) + 1.23886931229568e-8 * sp.sqrt(6357) * sp.sqrt(1 / (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) + 2.47773862459136e-9)) - 3319.42290170696 * chi ** 3 * ((
                                                                                                                   -0.0545987790460187 * chi ** 4 * (
                                                                                                                       0.333333333333333 * sp.sqrt(
                                                                                                                   3) * (
                                                                                                                                   -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                                                   27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                                               mu ** 4 * (
                                                                                                                                   sp.sqrt(
                                                                                                                                       3) * sp.sqrt(
                                                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                                                                                                                               -0.0545987790460187 * chi ** 4 * (
                                                                                                                                   0.333333333333333 * sp.sqrt(
                                                                                                                               3) * (
                                                                                                                                               -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                                                           mu ** 4 * (
                                                                                                                                               sp.sqrt(
                                                                                                                                                   3) * sp.sqrt(
                                                                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 3 * (
                                                                                                                                           sp.sqrt(
                                                                                                                                               3) * sp.sqrt(
                                                                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + (
                                                                                                                                           -0.333333333333333 * sp.sqrt(
                                                                                                                                       3) * (
                                                                                                                                                       -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                                                           2 * (
                                                                                                                                               sp.sqrt(
                                                                                                                                                   3) * sp.sqrt(
                                                                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                                                                               mu ** 4 * (
                                                                                                                                   0.109197558092037 * chi ** 4 * (
                                                                                                                                       sp.sqrt(
                                                                                                                                           3) * sp.sqrt(
                                                                                                                                   27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                                                               sp.sqrt(
                                                                                                                                                   3) * sp.sqrt(
                                                                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                                                                                                                           3 / 2)) - 0.218395116184075 * chi ** 3 * (
                                                                                                                               sp.sqrt(
                                                                                                                                   3) * sp.sqrt(
                                                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.612372435695794 * chi ** 3 / (
                                                                                                                               mu ** 4 * sp.sqrt(
                                                                                                                           0.109197558092037 * chi ** 4 * (
                                                                                                                                       sp.sqrt(
                                                                                                                                           3) * sp.sqrt(
                                                                                                                                   27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                                                       sp.sqrt(
                                                                                                                                           3) * sp.sqrt(
                                                                                                                                   27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                                                               -0.333333333333333 * sp.sqrt(
                                                                                                                           3) * (
                                                                                                                                           -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                                               2 * (
                                                                                                                                   sp.sqrt(
                                                                                                                                       3) * sp.sqrt(
                                                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                                                                   2 * sp.sqrt(
                                                                                                               -0.109197558092037 * chi ** 4 * (
                                                                                                                           sp.sqrt(
                                                                                                                               3) * sp.sqrt(
                                                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                                                                                                                           mu ** 4 * sp.sqrt(
                                                                                                                       0.109197558092037 * chi ** 4 * (
                                                                                                                                   sp.sqrt(
                                                                                                                                       3) * sp.sqrt(
                                                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                                                   sp.sqrt(
                                                                                                                                       3) * sp.sqrt(
                                                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                                                           sp.sqrt(
                                                                                                                               3) * sp.sqrt(
                                                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                                                                                                                   -0.333333333333333))) - (
                                                                                                                   0.0545987790460187 * chi ** 4 * (
                                                                                                                       0.333333333333333 * sp.sqrt(
                                                                                                                   3) * (
                                                                                                                                   -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                                                   27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                                               mu ** 4 * (
                                                                                                                                   sp.sqrt(
                                                                                                                                       3) * sp.sqrt(
                                                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 3 * (
                                                                                                                               sp.sqrt(
                                                                                                                                   3) * sp.sqrt(
                                                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - (
                                                                                                                               -0.333333333333333 * sp.sqrt(
                                                                                                                           3) * (
                                                                                                                                           -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                                               2 * (
                                                                                                                                   sp.sqrt(
                                                                                                                                       3) * sp.sqrt(
                                                                                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                                                                   2 * sp.sqrt(
                                                                                                               0.109197558092037 * chi ** 4 * (
                                                                                                                           sp.sqrt(
                                                                                                                               3) * sp.sqrt(
                                                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                                           sp.sqrt(
                                                                                                                               3) * sp.sqrt(
                                                                                                                       27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333))) * sp.sin(
        0.0174532925199433 * sp.asin(0.966775705727066 * sp.sqrt(-sp.sqrt(0.109197558092037 * chi ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                      sp.sqrt(3) * sp.sqrt(
                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))))) / ((-sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                 sp.sqrt(3) * sp.sqrt(
                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) ** (7 / 2) * sp.sqrt(3 * sp.cos(0.0174532925199433 * sp.asin(
        0.966775705727066 * sp.sqrt(-sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))))) + 1) * sp.sqrt(0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                               sp.sqrt(3) * sp.sqrt(
                                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) - 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) + 1) * sp.sqrt(2.47773862459136e-6 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) + (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) + 1.23886931229568e-8 * sp.sqrt(6357) * sp.sqrt(1 / (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) + 2.47773862459136e-9)) + 131149.98067647 * chi ** 3 * sp.sqrt(3 * sp.cos(
        0.0174532925199433 * sp.asin(0.966775705727066 * sp.sqrt(-sp.sqrt(0.109197558092037 * chi ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                      sp.sqrt(3) * sp.sqrt(
                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))))) + 1) * (-(-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * (-6357 * (0.934655265184067 * (-0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (-108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                                                                                      -0.0545987790460187 * chi ** 4 * (
                                                                                          0.333333333333333 * sp.sqrt(
                                                                                      3) * (
                                                                                                      -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                  mu ** 4 * (sp.sqrt(
                                                                                              3) * sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 3 * (
                                                                                                  sp.sqrt(3) * sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + (
                                                                                                  -0.333333333333333 * sp.sqrt(
                                                                                              3) * (
                                                                                                              -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                  2 * (sp.sqrt(
                                                                                              3) * sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                                      mu ** 4 * (
                                                                                          0.109197558092037 * chi ** 4 * (
                                                                                              sp.sqrt(3) * sp.sqrt(
                                                                                          27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                      sp.sqrt(
                                                                                                          3) * sp.sqrt(
                                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                                                                                  3 / 2)) - 0.218395116184075 * chi ** 3 * (
                                                                                      sp.sqrt(3) * sp.sqrt(
                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.612372435695794 * chi ** 3 / (
                                                                                      mu ** 4 * sp.sqrt(
                                                                                  0.109197558092037 * chi ** 4 * (
                                                                                              sp.sqrt(3) * sp.sqrt(
                                                                                          27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                              sp.sqrt(3) * sp.sqrt(
                                                                                          27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                      -0.333333333333333 * sp.sqrt(
                                                                                  3) * (
                                                                                                  -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                                      2 * (sp.sqrt(3) * sp.sqrt(
                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (-108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 3 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) / (
                                                        175 * chi) + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi ** 2)) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) / 2 - 1.23886931229568e-6 * (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi) * (-6357 * (0.934655265184067 * (-0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (-108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                                                                                          -0.0545987790460187 * chi ** 4 * (
                                                                                              0.333333333333333 * sp.sqrt(
                                                                                          3) * (
                                                                                                          -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                          27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                      mu ** 4 * (
                                                                                                          sp.sqrt(
                                                                                                              3) * sp.sqrt(
                                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 3 * (
                                                                                                      sp.sqrt(
                                                                                                          3) * sp.sqrt(
                                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + (
                                                                                                      -0.333333333333333 * sp.sqrt(
                                                                                                  3) * (
                                                                                                                  -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                      2 * (sp.sqrt(
                                                                                                  3) * sp.sqrt(
                                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                                          mu ** 4 * (
                                                                                              0.109197558092037 * chi ** 4 * (
                                                                                                  sp.sqrt(3) * sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                          sp.sqrt(
                                                                                                              3) * sp.sqrt(
                                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                                                                                      3 / 2)) - 0.218395116184075 * chi ** 3 * (
                                                                                          sp.sqrt(3) * sp.sqrt(
                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.612372435695794 * chi ** 3 / (
                                                                                          mu ** 4 * sp.sqrt(
                                                                                      0.109197558092037 * chi ** 4 * (
                                                                                                  sp.sqrt(3) * sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                  sp.sqrt(3) * sp.sqrt(
                                                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                          -0.333333333333333 * sp.sqrt(
                                                                                      3) * (
                                                                                                      -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                                          2 * (sp.sqrt(3) * sp.sqrt(
                                                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (-108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 3 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) / (
                                                            280 * chi) + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi ** 2)) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) - 1.23886931229568e-6 * (6357 * (0.934655265184067 * (
                -0.0545987790460187 * chi ** 4 * (0.333333333333333 * sp.sqrt(3) * (
                    -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                            -0.0545987790460187 * chi ** 4 * (0.333333333333333 * sp.sqrt(3) * (
                                -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (
                                        mu ** 4 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 3 * (
                                        sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + (
                                        -0.333333333333333 * sp.sqrt(3) * (
                                            -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                        2 * (sp.sqrt(3) * sp.sqrt(
                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                            mu ** 4 * (0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                   sp.sqrt(3) * sp.sqrt(
                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                        3 / 2)) - 0.218395116184075 * chi ** 3 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.612372435695794 * chi ** 3 / (
                            mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                          sp.sqrt(3) * sp.sqrt(
                                                      27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                            -0.333333333333333 * sp.sqrt(3) * (
                                -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (2 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (-108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 3 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) / chi - 6357 * (
                                                                                      -0.934655265184067 * sp.sqrt(
                                                                                  0.109197558092037 * chi ** 4 * (
                                                                                              sp.sqrt(3) * sp.sqrt(
                                                                                          27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                              sp.sqrt(3) * sp.sqrt(
                                                                                          27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
                                                                                  -0.109197558092037 * chi ** 4 * (
                                                                                              sp.sqrt(3) * sp.sqrt(
                                                                                          27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                                                                                              mu ** 4 * sp.sqrt(
                                                                                          0.109197558092037 * chi ** 4 * (
                                                                                                      sp.sqrt(
                                                                                                          3) * sp.sqrt(
                                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                      sp.sqrt(
                                                                                                          3) * sp.sqrt(
                                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                              sp.sqrt(3) * sp.sqrt(
                                                                                          27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                                                                                      -0.333333333333333))) / chi ** 2) * sp.exp(
        6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / (280 * chi)) - (6357 * (0.934655265184067 * (-0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (-108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                                                                                                 -0.0545987790460187 * chi ** 4 * (
                                                                                                     0.333333333333333 * sp.sqrt(
                                                                                                 3) * (
                                                                                                                 -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                             mu ** 4 * (
                                                                                                                 sp.sqrt(
                                                                                                                     3) * sp.sqrt(
                                                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 3 * (
                                                                                                             sp.sqrt(
                                                                                                                 3) * sp.sqrt(
                                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + (
                                                                                                             -0.333333333333333 * sp.sqrt(
                                                                                                         3) * (
                                                                                                                         -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                             2 * (
                                                                                                                 sp.sqrt(
                                                                                                                     3) * sp.sqrt(
                                                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                                                                 mu ** 4 * (
                                                                                                     0.109197558092037 * chi ** 4 * (
                                                                                                         sp.sqrt(
                                                                                                             3) * sp.sqrt(
                                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                                 sp.sqrt(
                                                                                                                     3) * sp.sqrt(
                                                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                                                                                             3 / 2)) - 0.218395116184075 * chi ** 3 * (
                                                                                                 sp.sqrt(3) * sp.sqrt(
                                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.612372435695794 * chi ** 3 / (
                                                                                                 mu ** 4 * sp.sqrt(
                                                                                             0.109197558092037 * chi ** 4 * (
                                                                                                         sp.sqrt(
                                                                                                             3) * sp.sqrt(
                                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                         sp.sqrt(
                                                                                                             3) * sp.sqrt(
                                                                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                                 -0.333333333333333 * sp.sqrt(
                                                                                             3) * (
                                                                                                             -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                                                 2 * (sp.sqrt(
                                                                                             3) * sp.sqrt(
                                                                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                0.333333333333333 * sp.sqrt(3) * (-108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 3 * (
                                                                    sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - (
                                                                    -0.333333333333333 * sp.sqrt(3) * (
                                                                        -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                    2 * (sp.sqrt(3) * sp.sqrt(
                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) / chi - 6357 * (
                                                                    -0.934655265184067 * sp.sqrt(
                                                                0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                                                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                            sp.sqrt(3) * sp.sqrt(
                                                                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
                                                                -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                                                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                                                                            mu ** 4 * sp.sqrt(
                                                                        0.109197558092037 * chi ** 4 * (
                                                                                    sp.sqrt(3) * sp.sqrt(
                                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                    sp.sqrt(3) * sp.sqrt(
                                                                                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                            sp.sqrt(3) * sp.sqrt(
                                                                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                                                                    -0.333333333333333))) / chi ** 2) * sp.exp(
        6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / (175 * chi)) / 2 - 3.0971732807392e-9 * sp.sqrt(6357) * (-6357 * (
                0.934655265184067 * (-0.0545987790460187 * chi ** 4 * (0.333333333333333 * sp.sqrt(3) * (
                    -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.153093108923949 * chi ** 4 * (
                                                 -0.0545987790460187 * chi ** 4 * (0.333333333333333 * sp.sqrt(3) * (
                                                     -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (
                                                             mu ** 4 * (sp.sqrt(3) * sp.sqrt(
                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) - 0.218395116184075 * chi ** 3 * (
                                                             sp.sqrt(3) * sp.sqrt(
                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + (
                                                             -0.333333333333333 * sp.sqrt(3) * (
                                                                 -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                             2 * (sp.sqrt(3) * sp.sqrt(
                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / (
                                                 mu ** 4 * (0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                        sp.sqrt(3) * sp.sqrt(
                                                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) ** (
                                                             3 / 2)) - 0.218395116184075 * chi ** 3 * (
                                                 sp.sqrt(3) * sp.sqrt(
                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.612372435695794 * chi ** 3 / (
                                                 mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                               sp.sqrt(3) * sp.sqrt(
                                                                           27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                 -0.333333333333333 * sp.sqrt(3) * (
                                                     -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                 2 * (sp.sqrt(3) * sp.sqrt(
                                             27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333)) - 0.934655265184067 * (0.0545987790460187 * chi ** 4 * (
                    0.333333333333333 * sp.sqrt(3) * (
                        -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) - 12.0 * mu ** 4 / chi ** 5) / (mu ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.666666666666667) + 0.218395116184075 * chi ** 3 * (
                                                                        sp.sqrt(3) * sp.sqrt(
                                                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - (
                                                                        -0.333333333333333 * sp.sqrt(3) * (
                                                                            -108 * mu ** 8 / chi ** 9 - 1536 * mu ** 12 / chi ** 13) / sp.sqrt(
                                                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 12.0 * mu ** 4 / chi ** 5) / (
                                                                        2 * (sp.sqrt(3) * sp.sqrt(
                                                                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 1.33333333333333)) / sp.sqrt(
            0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) / chi + 6357 * (
                                                                                                             -0.934655265184067 * sp.sqrt(
                                                                                                         0.109197558092037 * chi ** 4 * (
                                                                                                                     sp.sqrt(
                                                                                                                         3) * sp.sqrt(
                                                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                                     sp.sqrt(
                                                                                                                         3) * sp.sqrt(
                                                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
                                                                                                         -0.109197558092037 * chi ** 4 * (
                                                                                                                     sp.sqrt(
                                                                                                                         3) * sp.sqrt(
                                                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                                                                                                                     mu ** 4 * sp.sqrt(
                                                                                                                 0.109197558092037 * chi ** 4 * (
                                                                                                                             sp.sqrt(
                                                                                                                                 3) * sp.sqrt(
                                                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                                                             sp.sqrt(
                                                                                                                                 3) * sp.sqrt(
                                                                                                                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                                                                                                                     sp.sqrt(
                                                                                                                         3) * sp.sqrt(
                                                                                                                 27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                                                                                                             -0.333333333333333))) / chi ** 2) * sp.sqrt(
        1 / (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) / (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi)) / ((-sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                   sp.sqrt(3) * sp.sqrt(
                                                               27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) ** 3 * (2.47773862459136e-6 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) + (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) + 1.23886931229568e-8 * sp.sqrt(6357) * sp.sqrt(1 / (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) + 2.47773862459136e-9) ** (
                                                         3 / 2)) + 393449.942029409 * chi ** 2 * sp.sqrt(3 * sp.cos(
        0.0174532925199433 * sp.asin(0.966775705727066 * sp.sqrt(-sp.sqrt(0.109197558092037 * chi ** 4 * (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                                      sp.sqrt(3) * sp.sqrt(
                                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))))) + 1) / ((-sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                      sp.sqrt(3) * sp.sqrt(
                                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) ** 3 * sp.sqrt(2.47773862459136e-6 * (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 280 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (280 * chi)) + (-6357 + 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / chi) * sp.exp(6357 / 175 - 6357 * (-0.934655265184067 * sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) / (175 * chi)) + 1.23886931229568e-8 * sp.sqrt(6357) * sp.sqrt(1 / (-6357 + 6357 * (
                -0.934655265184067 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                         sp.sqrt(3) * sp.sqrt(
                                                     27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + 0.934655265184067 * sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333))) / chi)) + 2.47773862459136e-9)))








    func_scale_dkpara = lambdify([mu, chi],9.00357277452675e-8 * chi ** 2 * sp.sqrt(3 * sp.cos(sp.pi * sp.sin(0.966775705727066 * sp.sqrt(
        -sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                             sp.sqrt(3) * sp.sqrt(
                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333)))) / 180) + 1) / ((-sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                            sp.sqrt(3) * sp.sqrt(
                                                                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) ** 2 * sp.sqrt(sp.cos(sp.pi * sp.sin(0.966775705727066 * sp.sqrt(-sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)))) / 180))))






    func_scale_dkperp = lambdify([mu, chi],1.80071455490535e-7 * chi ** 2 * sp.sqrt(3 * sp.cos(sp.pi * sp.sin(0.966775705727066 * sp.sqrt(
        -sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                             sp.sqrt(3) * sp.sqrt(
                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333)))) / 180) + 1) * sp.sin(sp.pi * sp.sin(0.966775705727066 * sp.sqrt(-sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)))) / 180) / (-sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                  sp.sqrt(3) * sp.sqrt(
                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) ** 2)







    func_scale_dmu = lambdify([mu, chi], 9.00357277452675e-8 * chi ** 2 * sp.sqrt(3 * sp.cos(sp.pi * sp.sin(0.966775705727066 * sp.sqrt(
        -sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                             sp.sqrt(3) * sp.sqrt(
                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333)))) / 180) + 1) / ((-sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                            sp.sqrt(3) * sp.sqrt(
                                                                        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) ** 2 * sp.sqrt(sp.cos(sp.pi * sp.sin(0.966775705727066 * sp.sqrt(-sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)))) / 180))))







    func_scale_dchi = lambdify([mu, chi],-1.80071455490535e-7 * chi ** 2 * sp.sqrt(3 * sp.cos(sp.pi * sp.sin(0.966775705727066 * sp.sqrt(
        -sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                             sp.sqrt(3) * sp.sqrt(
                         27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
            -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                        mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                      sp.sqrt(3) * sp.sqrt(
                                                  27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                        sp.sqrt(3) * sp.sqrt(
                    27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
                -0.333333333333333)))) / 180) + 1) * sp.sin(sp.pi * sp.sin(0.966775705727066 * sp.sqrt(-sp.sqrt(
        0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333)))) / 180) / (-sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
        27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                                  sp.sqrt(3) * sp.sqrt(
                                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333) + sp.sqrt(
        -0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
            27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 + 0.306186217847897 * chi ** 4 / (
                    mu ** 4 * sp.sqrt(0.109197558092037 * chi ** 4 * (sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333 / mu ** 4 - 1 / (
                                                  sp.sqrt(3) * sp.sqrt(
                                              27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** 0.333333333333333)) + (
                    sp.sqrt(3) * sp.sqrt(
                27 * mu ** 8 / chi ** 8 + 256 * mu ** 12 / chi ** 12) + 9 * mu ** 4 / chi ** 4) ** (
            -0.333333333333333))) ** 2)